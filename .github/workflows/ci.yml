name: CI - Rust

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  backend-tests:
    name: Rust Unit + Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      universal:
        image: universal-runner:latest
        ports:
          - 12345:12345

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start universal service
        run: docker-compose up -d universal

      - name: Wait until Docker container is healthy
        run: |
          until curl --silent --fail localhost:12345; do
            echo "waitingâ€¦"; sleep 1
          done

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build output
        uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Copy .env file
        run: cp .env.example .env

      - name: Run backend tests
        run: cargo test --workspace --all-features

      - name: Tear down containers
        if: always()
        run: docker-compose down